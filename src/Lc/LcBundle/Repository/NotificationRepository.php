<?php

namespace Lc\LcBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * NotificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotificationRepository extends EntityRepository
{
    public function loadNoty($id2)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT n FROM
          			LcLcBundle:Notification n
          			WHERE n.user2 = :id2 AND n.self_page != :id1
          			order by n.created_at DESC'
            )
            ->setParameters(array(
               'id2' => $id2,
               'id1' => $id2->getId(),
            ));

        return $query;
    }
    public function countTotalNoty($id2)
    {
        $query = $this->getEntityManager()
            ->createQuery(
              'SELECT n FROM
              LcLcBundle:Notification n
              WHERE n.user2 = :id2 AND n.self_page != :id1
              order by n.created_at DESC'
            )
            ->setParameters(array(
              'id2' => $id2,
              'id1' => $id2->getId(),
            ));

        try {
            $love = $query->getResult();
        } catch (\Doctrine\Orm\NoResultException $e) {
            $love = null;
        }

        return count($love);
    }

    public function notyCount($id2)
    {
        $query = $this->getEntityManager()
            ->createQuery(
              'SELECT n FROM
              LcLcBundle:Notification n
              WHERE n.user2 = :id2 AND n.self_page != :id1 and n.viewed = :vi
              order by n.created_at DESC'
            )
            ->setParameters(array(
              'id2' => $id2,
              'id1' => $id2->getId(),
              'vi' => 0,
            ));

        try {
            $love = $query->getResult();
        } catch (\Doctrine\Orm\NoResultException $e) {
            $love = null;
        }

        $love = count($love);

        return $love;
    }

    public function updateNoty($id2)
    {
        $qb = $this->createQueryBuilder('');
        $q = $qb->update('LcLcBundle:Notification', 'n')
        ->set('n.viewed', $qb->expr()->literal(true))
        ->where('n.user2 = :id2 AND n.self_page != :id1 and n.viewed = :vi')
        ->setParameters(array(
          'id2' => $id2,
          'id1' => $id2->getId(),
          'vi' => 0,
        ))
        ->getQuery();
        $p = $q->execute();
    }
}
