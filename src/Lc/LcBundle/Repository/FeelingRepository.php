<?php

namespace Lc\LcBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Lc\LcBundle\Entity\Feeling;

/**
 * FeelingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FeelingRepository extends EntityRepository
{
    public function getUserFeeling($uid = null)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT f FROM
			LcLcBundle:Feeling f
			WHERE f.channel = :channel
			AND f.is_active = :is
			order by f.created_at DESC'
            )
            ->setParameters(array(
                           'channel' => 'prd',
                           'is' => 1,
                            ));

        return $query;
    }

    public function getUserFeelingPreview($uid = null)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT f FROM
			LcLcBundle:Feeling f
			WHERE f.channel = :channel
			AND f.is_active = :is
			AND f.user = :uid
			order by f.created_at DESC'
            )
            ->setParameters(array(
                           'channel' => 'prd',
                           'is' => 1,
                           'uid' => $uid,
                            ));

        return $query;
    }

    public function countUserFeelingPreview($uid = null)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT f FROM
			LcLcBundle:Feeling f
			WHERE f.channel = :channel
			AND f.is_active = :is
			order by f.created_at DESC'
            )
            ->setParameters(array(
                           'channel' => 'prd',
                           'is' => 1,
                            ));

        return count($query->getResult());
    }

    public function countUserFeeling($uid = null)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT f FROM
			LcLcBundle:Feeling f
			WHERE f.channel = :channel
			AND f.is_active = :is
			order by f.created_at DESC'
            )
            ->setParameters(array(
                           'channel' => 'prd',
                           'is' => 1,
                            ));

        $love = $query->getResult();

        $love = count($love);

        return $love;
    }
}
