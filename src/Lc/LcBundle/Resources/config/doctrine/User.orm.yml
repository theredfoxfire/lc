Lc\LcBundle\Entity\User:
 type: entity
 repositoryClass: Lc\LcBundle\Repository\UserRepository
 table: user
 id:
  id:
   type: integer
   generator: { strategy: AUTO }
 fields:
  facebook_id:
   type: string
   length: 255
   nullable: true
  email:
   type: string
   length: 255
   nullable: true
  password:
   type: string
   length: 255
   nullable: true
  username:
   type: string
   length: 255
   nullable: true
  email_canonical:
   type: string
   length: 255
   nullable: true
  facebook_access_token:
   type: string
   length: 255
   nullable: true
  google_id:
   type: string
   length: 255
   nullable: true
  google_access_token:
   type: string
   length: 255
   nullable: true
  sex:
   type: integer
   length: 1
  phone:
   type: string
   length: 20
   nullable: true
  is_verified:
   type: boolean
   nullable: true
  foto:
   type: string
   length: 255
   nullable: true
  birthday:
   type: date
  broad:
   type: boolean
   nullable: true
  is_active:
   type: boolean
  created_at:
   type: datetime
  updated_at:
   type: datetime
   nullable: true
  token:
   type: string
   length: 255
   unique: true
 oneToMany:
  feeling:
   targetEntity: Feeling
   mappedBy: user
  fcomment:
   targetEntity: Fcomment
   mappedBy: user
  flike:
   targetEntity: Flike
   mappedBy: user
  fshare:
   targetEntity: Fshare
   mappedBy: user
  gshare:
   targetEntity: Gshare
   mappedBy: user
  gcomment:
   targetEntity: Gcomment
   mappedBy: user
  glike:
   targetEntity: Glike
   mappedBy: user
  gallery:
   targetEntity: Gallery
   mappedBy: user
  userdoing:
   targetEntity: Userdoing
   mappedBy: user
  userlog:
   targetEntity: Userlog
   mappedBy: user
  friend1:
   targetEntity: Friend
   mappedBy: user1
  friend2:
   targetEntity: Friend
   mappedBy: user2
  chat1:
   targetEntity: Chat
   mappedBy: user1
  chat2:
   targetEntity: Chat
   mappedBy: user2
  notify1:
   targetEntity: Notification
   mappedBy: user1
  notify2:
   targetEntity: Notification
   mappedBy: user2
 oneToOne:
  usercriteria:
   targetEntity: Usercriteria
   mappedBy: user
  profile:
   targetEntity: Profile
   mappedBy: user

 lifecycleCallbacks:
  prePersist: [ preUpload, setCreatedAtValue, setTokenValue ]
  preUpdate: [ removeUploaded, preUpload, setUpdatedAtValue ]
  postPersist: [ upload, updateLuceneIndex ]
  postUpdate: [ upload, updateLuceneIndex ]
  postRemove: [ removeUpload, deleteLuceneIndex ]
